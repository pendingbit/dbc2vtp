
globalstring = ''

fix_header = '''
/* ************************************************************************** */
/*                                                                            */
/*                    Mentor Graphics Corporation                             */
/*                        All rights reserved                                 */
/*                           NBYX Created                                     */
/* ************************************************************************** */
/*                                                                            */
/*  Description:   Fixed file for Volcano 7.2                                 */
/*  ECU:           SCU                                                        */
/*                                                                            */
/* ************************************************************************** */
/*                                                                            */
/*                                                                            */
/* ************************************************************************** */
/* Auto generated by dbc2vtp.py tool                                          */
/*                                                                            */
/* ************************************************************************** */


fixed_file;
volcano version "7.2";

volcano processing period 5 ms; 

network interface SCU_CAN_IF {
	Baud rate 500 kHz;

	supports mode FM_NORMAL;
	supports mode FM_QUIET;
	supports mode FM_SILENT;
	transmit interrupt true;
	receive interrupt true;
} 
'''

fix_tail = '''
immediate frame Diag_EXTEND_PhyResp_SCU {
	transmitted;
	contains signal Diag_ExtendCAN_PhyResp_SCU;
}

immediate frame Diag_EXTEND_FunReq {
	received;
	contains signal Diag_ExtendCAN_FunReq;
}

immediate frame Diag_EXTEND_PhyReq_SCU {
	received;
	contains signal Diag_ExtendCAN_PhyReq_SCU;
}
'''
def Signal_Process(sig,dir):
    global globalstring
    globalstring = ''
    for i in range(int(len(sig)) - 4):
        temp1 = "\r\nsignal " + sig[4+i][0] + "{\r\n"
        
        if dir == 1:
            temp2 = temp1 + "   subscribed;\r\n"
        else:
            temp2 = temp1 + "   published;\r\n"

        size = int(sig[4+i][2]) 
        if size < 32:  #less than 4bytes 
            temp3 = temp2 + "   type unsigned;\r\n"
            temp4 = temp3 + "   size " + sig[4+i][2] + " bits;\r\n}\r\n"
        elif size == 56 or size == 64:
            temp3 = temp2 + "   type bytes;\r\n"
            temp4 = temp3 + "   size " + sig[4+i][2] + " bytes;\r\n}\r\n"
        else:
            print("Not recognized!!! Plese Check Signal"+sig[4+i][0])
            exit(0)
        globalstring += temp4        
    return 

def Fix_Generate(dbc,masternode,filename):
    outfile = open(filename+".fix", "w+")
    outfile.writelines(fix_header)

    for i in range(len(dbc)):
        if dbc[i][0] == masternode:
            Signal_Process(dbc[i], 0)
        else:
            Signal_Process(dbc[i], 1)
        outfile.writelines(globalstring)

    outfile.writelines(fix_tail)
    outfile.flush()
    outfile.close()

    return 